// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package blackbox

import (
	"github.com/dc0d/bank_account_kata_go/core/actions/boundaries"
	"github.com/dc0d/bank_account_kata_go/delivery/webapi"
	"sync"
)

var (
	lockWithdrawalActionProviderSpyProvideWithdrawalAction sync.RWMutex
)

// Ensure, that WithdrawalActionProviderSpy does implement webapi.WithdrawalActionProvider.
// If this is not the case, regenerate this file with moq.
var _ webapi.WithdrawalActionProvider = &WithdrawalActionProviderSpy{}

// WithdrawalActionProviderSpy is a mock implementation of webapi.WithdrawalActionProvider.
//
//     func TestSomethingThatUsesWithdrawalActionProvider(t *testing.T) {
//
//         // make and configure a mocked webapi.WithdrawalActionProvider
//         mockedWithdrawalActionProvider := &WithdrawalActionProviderSpy{
//             ProvideWithdrawalActionFunc: func() boundaries.Action {
// 	               panic("mock out the ProvideWithdrawalAction method")
//             },
//         }
//
//         // use mockedWithdrawalActionProvider in code that requires webapi.WithdrawalActionProvider
//         // and then make assertions.
//
//     }
type WithdrawalActionProviderSpy struct {
	// ProvideWithdrawalActionFunc mocks the ProvideWithdrawalAction method.
	ProvideWithdrawalActionFunc func() boundaries.Action

	// calls tracks calls to the methods.
	calls struct {
		// ProvideWithdrawalAction holds details about calls to the ProvideWithdrawalAction method.
		ProvideWithdrawalAction []struct {
		}
	}
}

// ProvideWithdrawalAction calls ProvideWithdrawalActionFunc.
func (mock *WithdrawalActionProviderSpy) ProvideWithdrawalAction() boundaries.Action {
	if mock.ProvideWithdrawalActionFunc == nil {
		panic("WithdrawalActionProviderSpy.ProvideWithdrawalActionFunc: method is nil but WithdrawalActionProvider.ProvideWithdrawalAction was just called")
	}
	callInfo := struct {
	}{}
	lockWithdrawalActionProviderSpyProvideWithdrawalAction.Lock()
	mock.calls.ProvideWithdrawalAction = append(mock.calls.ProvideWithdrawalAction, callInfo)
	lockWithdrawalActionProviderSpyProvideWithdrawalAction.Unlock()
	return mock.ProvideWithdrawalActionFunc()
}

// ProvideWithdrawalActionCalls gets all the calls that were made to ProvideWithdrawalAction.
// Check the length with:
//     len(mockedWithdrawalActionProvider.ProvideWithdrawalActionCalls())
func (mock *WithdrawalActionProviderSpy) ProvideWithdrawalActionCalls() []struct {
} {
	var calls []struct {
	}
	lockWithdrawalActionProviderSpyProvideWithdrawalAction.RLock()
	calls = mock.calls.ProvideWithdrawalAction
	lockWithdrawalActionProviderSpyProvideWithdrawalAction.RUnlock()
	return calls
}
