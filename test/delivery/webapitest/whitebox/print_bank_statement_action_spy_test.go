// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package whitebox

import (
	"github.com/dc0d/bank_account_kata_go/core/actions/boundaries"
	"sync"
)

var (
	lockPrintBankStatementActionSpyExecute sync.RWMutex
)

// Ensure, that PrintBankStatementActionSpy does implement boundaries.Action.
// If this is not the case, regenerate this file with moq.
var _ boundaries.Action = &PrintBankStatementActionSpy{}

// PrintBankStatementActionSpy is a mock implementation of boundaries.Action.
//
//     func TestSomethingThatUsesAction(t *testing.T) {
//
//         // make and configure a mocked boundaries.Action
//         mockedAction := &PrintBankStatementActionSpy{
//             ExecuteFunc: func(input interface{}, output interface{})  {
// 	               panic("mock out the Execute method")
//             },
//         }
//
//         // use mockedAction in code that requires boundaries.Action
//         // and then make assertions.
//
//     }
type PrintBankStatementActionSpy struct {
	// ExecuteFunc mocks the Execute method.
	ExecuteFunc func(input interface{}, output interface{})

	// calls tracks calls to the methods.
	calls struct {
		// Execute holds details about calls to the Execute method.
		Execute []struct {
			// Input is the input argument value.
			Input interface{}
			// Output is the output argument value.
			Output interface{}
		}
	}
}

// Execute calls ExecuteFunc.
func (mock *PrintBankStatementActionSpy) Execute(input interface{}, output interface{}) {
	if mock.ExecuteFunc == nil {
		panic("PrintBankStatementActionSpy.ExecuteFunc: method is nil but Action.Execute was just called")
	}
	callInfo := struct {
		Input  interface{}
		Output interface{}
	}{
		Input:  input,
		Output: output,
	}
	lockPrintBankStatementActionSpyExecute.Lock()
	mock.calls.Execute = append(mock.calls.Execute, callInfo)
	lockPrintBankStatementActionSpyExecute.Unlock()
	mock.ExecuteFunc(input, output)
}

// ExecuteCalls gets all the calls that were made to Execute.
// Check the length with:
//     len(mockedAction.ExecuteCalls())
func (mock *PrintBankStatementActionSpy) ExecuteCalls() []struct {
	Input  interface{}
	Output interface{}
} {
	var calls []struct {
		Input  interface{}
		Output interface{}
	}
	lockPrintBankStatementActionSpyExecute.RLock()
	calls = mock.calls.Execute
	lockPrintBankStatementActionSpyExecute.RUnlock()
	return calls
}
